WiP 5c (TBA)
------------
Git commit: 
-
0) Fix the ELF sections check to allow usage of ELF/DWARF available valid information
1) Added ELF section names
2) Set optimization for code speed in the VS2017 project
3) Added a setting for the emulation framerate display
4) Minor fix for the application's exit
5) Windows refresh rate placeholder text update in the alpine's configure tab
6) Added a Console standard emulation
-- Support only stdout
-- Text output color detection

pre-Release 5b (20th July 2022)
-------------------------------
Git commit: 351dc419d114719a4f240c616640d5c0ea520a04
-
0) Fix compilation error with gcc
1) Added the save state patch from PvtLewis (from Atari Age's forum)
2) Compilation warning fixes for the M68K project
3) Merged convience fixes #64 from 42Bastian
-- Start of RISC disassembly moved to F03000, GPU memory browser in longs, and fixed object list display
4) Fix parameter's address pointer and update icons usage for the Local variables window
5) Added a command line option to fill the entire system space with 0
6) M68K disassembly display the Bcc's logic result only when the line match with current PC
7) Documentation & content texts updates

pre-Release 5a hotfix (30th March 2022)
---------------------------------------
Git commit: 1f015230599f601430ca6339d046f346926b0a34
-
0) Fix to display GPU and DSP memory browser contents

pre-Release 5a (15th March 2022)
--------------------------------
Git commit: 7160602eda33df0e85e85c19f1f344a88ef502dc
-
0) Check missing qjpeg's dll for the tests pattern
1) Added ELF section names
2) Source file path clean up in the DWARF information reader
-- Useful in case of multiples /./, \.\, \\ or //
3) Project has switched to libdwarf 20210528 library 64bits for VS 2017
4) Local variables window stability improvements
-- Fix a crash, and added an error icon, for inaccessible memory range (values cannot be read)
5) DWARF information reader fix for local and parameter variables
-- Support wider offset ranges
6) Code will stop after the unknown memory location writing's alert box
7) Added a '/cygdrive/' directory detection and removal option
8) Fix a legacy issue for the Object list at $0
9) Fixes and improvements for the HW registers Blitter browser
10) Added an option to allow, or not, the unknown memory location writing detection
11) Added hexadecimal's value with $ for the function breakpoint & memory window
12) Added an exceptions tab in the configuration settings
--- Exceptions have been removed from the Alpine tab
13) Added a ROM cartridge browser for the Alpine and Debugger mode
14) Added GPU & DSP memory browser windows for the Alpine and Debugger mode
--- Include a legacy issue fix, to prevent user to set an address outside a memory zone
15) Documentation updates

Release 5 (26th May 2021)
-------------------------
Git commit: 0e699c1255f04f5c332632eef475ebcef4200305
-
0) Added a date creation stamp in the application command line information
- This date already appears in the Release 4 executable but was not referenced in his history note
1) Added a specific breakpoint for the M68K illegal instruction exception
-- Alert box will display a message and then the code will stop
2) Added a specific breakpoint for the M68K address error exception
-- Alert box will display a message and then the code will stop
3) Added a HW registers browser window and set a tab for the Blitter
4) Added detection for the unsigned/signed short type
-- Will allow the return of a short type variable's value
5) Added a specific breakpoint for the M68K Unimplemented instruction, and Exception not referenced exceptions
6) Fix potential emulator freeze after an exception has occured
7) Fix a random crash when reading the source lines information
8) Added ELF & DWARF .debug* types
9) Added ELF section types check and new error messages
10) Modified the call stack layout window and added source filename from the called source line
11) Added a source tab in the main window for step into tracing
12) Added the step over for source level tracing
13) Set text conversion to Qt/HTML format for the M68K tracing window
14) Added a source code file date check when reading DWARF information
-- Will avoid source code mismatching with the ELF executable
15) Remove Visual Studio 2015 support
16) Work around fix for a compilation error on Linux
-- EEPROM directory creation allowed only for Windows at the moment
17) Show the SR value as a readable form in the M68K CPU browser
18) Potential fix to compile on Linux
-- Added the relative directory path for the Qt include files
19) Merge the Linux build fixes from @richard42
-- Jaguar core's makefile and Qt pro file updates, fix filenames case sensitive & fixes for Linux
20) Updated the M68K exception catch
-- Added a M68K exception catch check in the Alpine tab settings
-- Added a specific breakpoint for the M68K bus error exception
21) Project has switched to libdwarf 20210305 library 64bits for VS 2017
22) Breakpoint list window is now refreshed after a new breakpoint is set
23) Handle number of M68K cycles used when tracing in debugger mode
-- The cycles are displayed in the emulator status window
24) Improve the DWARF source line number reporting
25) Added a #line in the call stack window
26) Added video output display in a specific window
27) Fixed potential crash with the debugger tabs reset
28) Added a search feature in the All Watch variables window
29) Support the structure's members in the Local variables window
30) Code refactoring for the variables support in debugger mode
31) Support the structure and union members from the DWARF information
32) Added a Virtual Jaguar Rx logo in the About window
33) Fix compilation / link error for MSYS2 / MinGW64
34) Documentation updates

Release 4a (15th August 2019)
-----------------------------
Git commit: f04df4f185ed4f3cfc805d0f61b3c019a108ae2c
-
0) Fix specific breakpoint for ROM cartridge or unknown memory location writing

Release 4 (10th August 2019)
----------------------------
Git commit: 9b25d85d1ea4a9476b83476bcec65e05464f68da
-
0) The zoom value setting has been fixed in the registry
1) Debugger mode now shares the same alpine rom path setting
2) Local variables window displays register name now
3) Switch to Zlib 1.2.11 static library 64bits for VS 2017
4) Switch to SDL 1.2.15 static library 64bits for VS 2017
5) Local variables window displays values from function's parameters
6) Fixed the typedef's name display in Local and Watch variables window
7) Breakpoint may now occur in case of a ROM cartridge writing
-- ROM cartridge writing detection follow the alpine "allow writes to cartridge rom"'s flag check
-- Alert box will display a message with possibility to pass or not the breakpoint only if this is related to a 8 or 16 bits ROM access
8) Local variables window detects now if a variable is used or not by the code
9) The address provided in the debugger memory windows is now verified to prevent crash
-- Wrong address will be displayed in red
10) UI changes 
-- Added new icons for the exit and status features
-- Modified icons for the SP (Stack) browser
-- Unified icons sizes depend on their usage (drop down menu and main menu)
-- Underline the active M68K line in the disassembly window
-- Allow the up/down navigation on the SP (Stack) browser
-- Restart function cleans-up the SP (Stack) browser and the heap allocator system
-- Fixed the up navigation on the memory window
11) Added some log information for the emulator initialisations
12) Breakpoint will happen in case of writing at unknown memory location
-- Alert box will display a message and then the code will stop
13) Added the DRAM size in the emulator status window
14) Debugger sources code clean-up
15) Added a call stack feature
16) Follow platform requirement to prevent source file reading issue
17) UI modifications
-- Modified icon for the memory window to make a distinction with the memory browser
-- The all watch, and Exception Vector Table windows, can be closed using keyboard
-- Renamed the debugger dedicated icons to make a distinction
-- Added the call stack window
18) Fixed a crash in the all watch window after loading a new binary without ELF/DWARF information
-- Previously used ELF/DWARF information was still accessible
19) Fixed slash/backslash issue, in the Alpine tab, to follow platform requirement
20) Heap allocation window uses the DRAM size limit option and detect if heap allocation shares space with SP (Stack)
21) Added a Jaguar model and BIOS configuration tab
22) Jaguar model and BIOS configuration integration
23) Added LEB128 decoding functions
-- It is used for the DWARF decoding information
24) Debugger support improvement
-- DWARF support for the enum type (partial), structure and subroutine type
-- Debugger can report variable's unsigned char value
25) UI modifications
-- Added a status bar, better status report & information display for the heap allocation window
-- Added a status bar, better status report & information display for the local variables window
-- Added better information display for the exception vectors table window, and added some missing vectors
-- Added a status bar, better status report & information display for the call stack window
-- Added a status bar, better status report & information display for the all watches window
26) Added screenshot feature
-- Not accessible in debugger mode
-- Added screenshot editable path in the general tab, and a key binding
27) Minor misspellings fixes
28) DWARF source code directory path clean-up
29) Added a source code files list viewer
-- List comes from the DWARF information
30) Check potential variables missing/incomplete description found in the DWARF information
-- No crash involved but can help to reduce such as variables duplicate or the blank ones
31) Added a sorting filter in the all watches window
32) Improve source code file reading to avoid additional text/bytes reading
33) Help & content texts updates
34) Fixed a crash legacy issue when emulator launches in Alpine mode without a valid rom
35) Added the support for the used lines source's DWARF structure
-- Mostly used to handle missing subprogram's lines information, and missing CU's low/high PC
36) Added the Rx version's contact in the help text
37) Added search paths in case of missing DWARF directories information
-- Used to look for the file(s)
38) Setup CU's low/high PC in case of the DWARF structures doesn't have it
-- Used mostly to allow display the source assembled with vasm
39) Added function name support from ELF structure
40) Added the return address information in the call stack
41) Added multiple breakpoints feature, and their key bindings, for functions only
42) Added timer initialisation for the SDL setup
43) Added a cartridge view menu
-- Added a window to display my own directory and his files list
44) Debugger sources code clean-up
45) Fix a crash when emulator, in non-debugger mode, opens the breakpoint UIs at launch
46) Fix crash with potential missing DWARF structure tag's type name
47) Added ELF sections check so a potential unknown section will stop, or not stop, the decoding
48) Project has switched to Qt 5.12.0 library 64bits for VS 2017
49) Added a Save Dump As... feature to save a memory zone to a file
50) The -d command line option, dedicated to the debugger, has been renamed to avoid duplication with the dsp one
-- -d has been renamed by -D because another -d was also used for the dsp command line option
51) Removed the sorting filter in the all watches window
52) Fix the support of the DRAM size limit option in the heap allocation window
53) Set cartridge view menu for debugger mode only
54) Prevent crash in case of call stack is out of range

Release 3 (13th November 2017)
------------------------------
Git commit: b1b673a3b0d19e3c2c45b6590b773b11e45bced7
-
0) Fixed the windows respawning in the next emulator launch within --alpine or --debugger options
1) Added an Exception Vector Table window
2) Modified the About window to update the credits list in a more appropriate way
-- Updated the emulator application credits line
3) Added 'Rx' word to the emulator name
4) Fixed a crash when reading the DWARF information in the case of the DWARF2 format has not been used
5) Added ui, alpine and debugger groups in the settings
6) Added the possibility to erase settings
7) Added the --es-all, --es-ui, --es-alpine and --es-debugger options to erase specific settings
8) Added a key bindings tab and adapted the configuration dialog tabs
-- User can modify the key bindings where appropriate
-- Key bindings UI is displayed based on the option used (--debugger, -- alpine)
9) Fixed a crash, in Release mode, when the HW labels setting is turn on
10) Solved an interference between the HW labels setting and the one used by the debugger
-- The setting is now only the reference used
11) Fixed the SP (Stack) browser UI potential missing data
12) Create a directory for EEPROMs (based on the EEPROMs setting) if it doesn't already exist
13) Keep the scrollbar position in accordance of the M68K PC pointer
-- UI displays the source without the need to move down/up the scrollbar
14) Fixed a crash when DWARF information report a source line number exceeding the number of lines present in a source file
-- This may come from the linker vlink
15) Improved the .heap section detection to avoid a detection error
-- Depend vlink version, .heap section may have an Alloc flag
16) Fixed a crash when DWARF information does references to missing source code files
17) Added a local variables window
18) Project has switched to Visual Studio 2017 and Qt 5.9.1 library

Release 2 (3rd September 2017)
------------------------------
0) Added some error detections when reading the ELF executable file
1) Added all hardware labels (based on the document scans from the Version 2.4 - June 7, 1995)
2) "Step Over" code function for BSR/JSR functions
3) Added the .debug_ranges detection to avoid a detection error
4) DWARF support
-- TAG: Compilation Unit, Subprogram, Variables, Types
-- Line numbers, symbols, functions
5) Added an All Watch window for non-local variables
6) Added a heap allocator window based on my own memory allocation functions
7) Added additional 4 memory windows with address input based on hexa, decimal or symbol name
8) Windows refreshing executed only if windows is visible
9) Added a restart function
-- Restart only the 68000 program counter to his original set
10) Modified the icons color backgound for the "Step In" and "Step Over" functions
11) Updated the About window to update the credits list
12) 64 bits Release executable
13) Fixed (hacking) the display of the SP (Stack) browser
14) Set the emulator in Halt mode when launched in alpine debug mode without a loaded rom
-- Otherwise the 68000 program counter will have a 0 value and will execute the code at this address
15) Added some information in the --help/-h/-? option
16) --debugger option no longer force the log file
17) Added a --dram-max option to extend the DRAM size to 8MB
18) Added the "enter" key support when setting the BPM (Breapoint)
19) Save the windows positions, size and visibilities (show or hide) status
-- Such windows will automatically respawn in the next emulator launch

Release 1 (12th February 2017)
------------------------------
0) BPM (Breapoint) now stop at the designated address and no longer stop after executing the code
1) Clean-up the tracing / no-tracing flags for better U.I understanding
2) Added SP (Stack) browser
3) User can change now the number of lines of disassembly displayed in the tracing window
4) User can turn on/off the op-codes associated in the disassembly lines displayed in the M68K tracing window
5) Added an emulator status window (GPU status, M68K debugger and tracking status)
6) Added a GPU disassembly tracing window - Display the current PC pointer
7) Added a DSP disassembly tracing window - Display the current PC pointer
8) Added possibility to change refresh rate of browsers when emulation is launched
9) Display partial hardware labels (Internal Memory and Graphics sub-system address space) in the disassembly lines displayed in the M68K tracing window
-- Display first the hardware labels (based from the Jag V8 dev. PDF) and then the ones possibly found in the ELF debug symbol
10) Minor U.I cosmetic changes
11) User can turn on/off the hardware labels associated in the disassembly lines displayed in the M68K tracing window
-- It doesn't apply to the hardware labels possibly found in the ELF debug symbol

Release 0 (5th January 2017)
----------------------------
0) New option --debugger
1) ELF format support
2) ELF debug symbol support
3) "Step Into" code function
4) Menus layout dedicated to the debugger
5) Added a dedicated main window for tracing (M68K)
6) Added a Debugger tab in the config tab
7) Visual Studio 2015 project support
8) libelf-0.8.13 library support
9) 64 bits debug executable only


Known issues
============
1) Video output is not displayed due to my OpenGL / Qt5 5.5.1 integration with VS 2015 but solved when using the Qt 5.9.1 package for VS 2017
2) The BPM (Breapoint) remains stuck on his address when user wants to continue the code execution
-- Need to trace over the BPM or unset the BPM
-- The issue can be prevented if the code doesn't set IRQ, otherwise the IRQ will need to be traced to get back control
3) DWARF 2 support
-- With GCC: the code must be compiled with the -gdwarf-2 option
4) The Local and Watch variables window  may display not available type information or empty information
-- Such missing information may be included in future release
-- The 'const' type may not be reported correctly in the DWARF information 
5) The 2MB mirroring is no longer applied in case of --dram-max option usage
6) Stack must reflect the --dram-max option usage otherwise the stack may be corrupted
-- The application needs to set the SP (Stack) in accordance
7) The Exception Vector Table window displays only 65 vectors
-- Missing vectors may be added in future release
8) User needs to manualy check if the Atari Jaguar executable match his source code files
-- Otherwise, source code and assembly may not match or leads to instabilities
9) The emulator needs to be restarted in case of the following actions occur
-- Key bindings changes
-- BIOS selection changes and without new executable load
10) In the case of a ROM cartridge writing, and with occuring breakpoint, the PC pointer will point at the next instruction and not at the instruction causing the breakpoint
11) Emulator will crash in case of wrong address value provided in the memory browser
12) The RAM access log is limited to the 2MB
13) In various occasions, global variables may be duplicated or without name in the DWARF information
-- It may come from the Vlink linker and/or GCC 7.1.0 or 8.2.0 compilation with -gdwarf-2 option
14) Source code disply only assembled code from vasm with option -dwarf
15) 
16) Some ASCII characters may be not displayed correctly
-- Probably depend how the text is displayed, this is related to the Qt/HTML encoding done when reading DWARF file
17) Potential legacy crash when leaving emulator in pause mode for a long period of time
-- Need more investigations

Cosmetic / UX issues
====================
1) The SP (Stack) icon color backgound doesn't look similar with the other ones
2) The SP (Stack) browser size always open at a forced size no matter if the size has been changed
3) Not every features have associated key bindings

Legacy issues/hints
===================
1) Emulator seems to have easter egg(s)
-- The option --yarrr displays a single message and end the application
-- Pressing F8, while in the main window, will create an extra message in the log file
2) The --alpine option force the log file but it can be override if --no-log option is set after the --alpine option

Project information
===================
1) Code based on the Shamus Hammons source code available via Gethub by the 12th September 2017 (2.1.3 Final)
2) Visual Studio 2017 project support for 64 bits
3) libelf 0.8.13 library 64bits for VS 2017
4) libdwarf 20210528 library 64bits for VS 2017
5) Qt 5.12.0 library 64bits for VS 2017
6) Zlib 1.2.11 library 64bits for VS 2017
7) SDL 1.2.15 library 64bits for VS 2017
8) The original make files have been modified to follow the requirements and modifications
9) The 'Rx' word has been added to the emulator name to make distinction with the official version
10) The project is set at https://github.com/djipi/Virtual-Jaguar-Rx
11) GPLv3 file document has been renamed as LICENSE, to fit better the GitHub requirements
-- Text / License terms are the same
14) The x86 configuration has been removed in the VS 2017 project
15) Additional project information can be found at https://github.com/djipi/Virtual-Jaguar-Rx/wiki


Download statistics
-------------------
jaguar64eu : 15 downloads for the Release 0 on the 12th Feb, 2017
jaguar64eu : 18 downloads for the Release 1 on the 21st May, 2017
No downloads statistics available for the Release 2
No downloads statistics available for the Release 3
